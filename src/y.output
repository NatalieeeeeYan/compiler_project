State 40 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: ProgramElementList

    2 ProgramElementList: ProgramElement ProgramElementList
    3                   | /* empty */

    4 ProgramElement: VarDeclStmt
    5               | StructDef
    6               | FnDeclStmt
    7               | FnDef
    8               | SEMICOLON

    9 NUM: UNUM
   10    | SUB UNUM

   11 ArithExpr: ArithExpr ADD ArithExpr
   12          | ArithExpr SUB ArithExpr
   13          | ArithExpr MUL ArithExpr
   14          | ArithExpr DIV ArithExpr
   15          | ExprUnit

   16 ExprUnit: NUM
   17         | ID
   18         | LPAR ArithExpr RPAR
   19         | FnCall
   20         | LeftVal LBRA ID RBRA
   21         | LeftVal LBRA NUM RBRA
   22         | LeftVal DOT ID

   23 BoolExpr: BoolExpr AND BoolExpr
   24         | BoolExpr OR BoolExpr
   25         | BoolUnit

   26 BoolUnit: LPAR ExprUnit GT ExprUnit RPAR
   27         | LPAR ExprUnit GE ExprUnit RPAR
   28         | LPAR ExprUnit LT ExprUnit RPAR
   29         | LPAR ExprUnit LE ExprUnit RPAR
   30         | LPAR ExprUnit EQUAL ExprUnit RPAR
   31         | LPAR ExprUnit NE ExprUnit RPAR
   32         | LPAR BoolExpr RPAR
   33         | NOT BoolUnit

   34 BoolUnit_: LPAR ExprUnit GT ExprUnit RPAR
   35          | LPAR ExprUnit LT ExprUnit RPAR
   36          | LPAR ExprUnit GE ExprUnit RPAR
   37          | LPAR ExprUnit LE ExprUnit RPAR
   38          | LPAR ExprUnit EQUAL ExprUnit RPAR
   39          | LPAR ExprUnit NE ExprUnit RPAR
   40          | LPAR BoolExpr RPAR
   41          | LPAR NOT BoolUnit RPAR

   42 LeftVal: ID
   43        | LeftVal LBRA ID RBRA
   44        | LeftVal LBRA NUM RBRA
   45        | LeftVal DOT ID

   46 RightVal: ArithExpr

   47 RightValList: RightVal COMMA RightValList
   48             | RightVal

   49 FnCall: ID LPAR RightValList RPAR
   50       | ID LPAR RPAR

   51 VarDeclStmt: LET VarDecl SEMICOLON
   52            | LET VarDef SEMICOLON

   53 VarDecl: ID COLON Type
   54        | ID LBRA NUM RBRA COLON Type
   55        | ID
   56        | ID LBRA NUM RBRA

   57 VarDef: ID COLON Type ASSIGN RightVal
   58       | ID ASSIGN RightVal
   59       | ID LBRA NUM RBRA COLON Type ASSIGN LCUR RightValList RCUR
   60       | ID LBRA NUM RBRA ASSIGN LCUR RightValList RCUR

   61 Type: INT
   62     | ID

   63 VarDeclList: VarDecl COMMA VarDeclList
   64            | VarDecl

   65 ParamDecl: VarDeclList
   66          | /* empty */

   67 StructDef: STRUCT ID LCUR VarDeclList RCUR

   68 FnDeclStmt: FnDecl SEMICOLON

   69 FnDecl: FN ID LPAR ParamDecl RPAR
   70       | FN ID LPAR ParamDecl RPAR ARR Type

   71 FnDef: FnDecl LCUR CodeBlockStmtList RCUR

   72 CodeBlockStmtList: CodeBlockStmt CodeBlockStmtList
   73                  | CodeBlockStmt
   74                  | /* empty */

   75 CodeBlockStmt: VarDeclStmt
   76              | AssignStmt
   77              | FnCall SEMICOLON
   78              | IfStmt
   79              | WhileStmt
   80              | RETURN RightVal SEMICOLON
   81              | RETURN SEMICOLON
   82              | CONTINUE SEMICOLON
   83              | BREAK SEMICOLON
   84              | SEMICOLON

   85 WhileStmt: WHILE BoolUnit_ LCUR CodeBlockStmtList RCUR

   86 IfStmt: IF BoolUnit_ LCUR CodeBlockStmtList RCUR
   87       | IF BoolUnit_ LCUR CodeBlockStmtList RCUR ELSE LCUR CodeBlockStmtList RCUR

   88 AssignStmt: LeftVal ASSIGN RightVal SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 11
SUB (259) 10 12
MUL (260) 13
DIV (261) 14
SEMICOLON (262) 8 51 52 68 77 80 81 82 83 84 88
COLON (263) 53 54 57 59
COMMA (264) 47 63
ID (265) 17 20 22 42 43 45 49 50 53 54 55 56 57 58 59 60 62 67 69 70
UNUM (266) 9 10
LPAR (267) 18 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 49 50 69
    70
RPAR (268) 18 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 49 50 69
    70
LBRA (269) 20 21 43 44 54 56 59 60
RBRA (270) 20 21 43 44 54 56 59 60
DOT (271) 22 45
AND (272) 23
OR (273) 24
GE (274) 27 36
LE (275) 29 37
EQUAL (276) 30 38
NE (277) 31 39
GT (278) 26 34
LT (279) 28 35
NOT (280) 33 41
ASSIGN (281) 57 58 59 60 88
LET (282) 51 52
IF (283) 86 87
ELSE (284) 87
WHILE (285) 85
BREAK (286) 83
CONTINUE (287) 82
RETURN (288) 80 81
FN (289) 69 70
STRUCT (290) 67
INT (291) 61
ARR (292) 70
LCUR (293) 59 60 67 71 85 86 87
RCUR (294) 59 60 67 71 85 86 87


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Program (41)
    on left: 1, on right: 0
ProgramElementList (42)
    on left: 2 3, on right: 1 2
ProgramElement (43)
    on left: 4 5 6 7 8, on right: 2
NUM (44)
    on left: 9 10, on right: 16 21 44 54 56 59 60
ArithExpr (45)
    on left: 11 12 13 14 15, on right: 11 12 13 14 18 46
ExprUnit (46)
    on left: 16 17 18 19 20 21 22, on right: 15 26 27 28 29 30 31 34
    35 36 37 38 39
BoolExpr (47)
    on left: 23 24 25, on right: 23 24 32 40
BoolUnit (48)
    on left: 26 27 28 29 30 31 32 33, on right: 25 33 41
BoolUnit_ (49)
    on left: 34 35 36 37 38 39 40 41, on right: 85 86 87
LeftVal (50)
    on left: 42 43 44 45, on right: 20 21 22 43 44 45 88
RightVal (51)
    on left: 46, on right: 47 48 57 58 80 88
RightValList (52)
    on left: 47 48, on right: 47 49 59 60
FnCall (53)
    on left: 49 50, on right: 19 77
VarDeclStmt (54)
    on left: 51 52, on right: 4 75
VarDecl (55)
    on left: 53 54 55 56, on right: 51 63 64
VarDef (56)
    on left: 57 58 59 60, on right: 52
Type (57)
    on left: 61 62, on right: 53 54 57 59 70
VarDeclList (58)
    on left: 63 64, on right: 63 65 67
ParamDecl (59)
    on left: 65 66, on right: 69 70
StructDef (60)
    on left: 67, on right: 5
FnDeclStmt (61)
    on left: 68, on right: 6
FnDecl (62)
    on left: 69 70, on right: 68 71
FnDef (63)
    on left: 71, on right: 7
CodeBlockStmtList (64)
    on left: 72 73 74, on right: 71 72 85 86 87
CodeBlockStmt (65)
    on left: 75 76 77 78 79 80 81 82 83 84, on right: 72 73
WhileStmt (66)
    on left: 85, on right: 79
IfStmt (67)
    on left: 86 87, on right: 78
AssignStmt (68)
    on left: 88, on right: 76


state 0

    0 $accept: . Program $end

    SEMICOLON  shift, and go to state 1
    LET        shift, and go to state 2
    FN         shift, and go to state 3
    STRUCT     shift, and go to state 4

    $default  reduce using rule 3 (ProgramElementList)

    Program             go to state 5
    ProgramElementList  go to state 6
    ProgramElement      go to state 7
    VarDeclStmt         go to state 8
    StructDef           go to state 9
    FnDeclStmt          go to state 10
    FnDecl              go to state 11
    FnDef               go to state 12


state 1

    8 ProgramElement: SEMICOLON .

    $default  reduce using rule 8 (ProgramElement)


state 2

   51 VarDeclStmt: LET . VarDecl SEMICOLON
   52            | LET . VarDef SEMICOLON

    ID  shift, and go to state 13

    VarDecl  go to state 14
    VarDef   go to state 15


state 3

   69 FnDecl: FN . ID LPAR ParamDecl RPAR
   70       | FN . ID LPAR ParamDecl RPAR ARR Type

    ID  shift, and go to state 16


state 4

   67 StructDef: STRUCT . ID LCUR VarDeclList RCUR

    ID  shift, and go to state 17


state 5

    0 $accept: Program . $end

    $end  shift, and go to state 18


state 6

    1 Program: ProgramElementList .

    $default  reduce using rule 1 (Program)


state 7

    2 ProgramElementList: ProgramElement . ProgramElementList

    SEMICOLON  shift, and go to state 1
    LET        shift, and go to state 2
    FN         shift, and go to state 3
    STRUCT     shift, and go to state 4

    $default  reduce using rule 3 (ProgramElementList)

    ProgramElementList  go to state 19
    ProgramElement      go to state 7
    VarDeclStmt         go to state 8
    StructDef           go to state 9
    FnDeclStmt          go to state 10
    FnDecl              go to state 11
    FnDef               go to state 12


state 8

    4 ProgramElement: VarDeclStmt .

    $default  reduce using rule 4 (ProgramElement)


state 9

    5 ProgramElement: StructDef .

    $default  reduce using rule 5 (ProgramElement)


state 10

    6 ProgramElement: FnDeclStmt .

    $default  reduce using rule 6 (ProgramElement)


state 11

   68 FnDeclStmt: FnDecl . SEMICOLON
   71 FnDef: FnDecl . LCUR CodeBlockStmtList RCUR

    SEMICOLON  shift, and go to state 20
    LCUR       shift, and go to state 21


state 12

    7 ProgramElement: FnDef .

    $default  reduce using rule 7 (ProgramElement)


state 13

   53 VarDecl: ID . COLON Type
   54        | ID . LBRA NUM RBRA COLON Type
   55        | ID .
   56        | ID . LBRA NUM RBRA
   57 VarDef: ID . COLON Type ASSIGN RightVal
   58       | ID . ASSIGN RightVal
   59       | ID . LBRA NUM RBRA COLON Type ASSIGN LCUR RightValList RCUR
   60       | ID . LBRA NUM RBRA ASSIGN LCUR RightValList RCUR

    COLON   shift, and go to state 22
    LBRA    shift, and go to state 23
    ASSIGN  shift, and go to state 24

    $default  reduce using rule 55 (VarDecl)


state 14

   51 VarDeclStmt: LET VarDecl . SEMICOLON

    SEMICOLON  shift, and go to state 25


state 15

   52 VarDeclStmt: LET VarDef . SEMICOLON

    SEMICOLON  shift, and go to state 26


state 16

   69 FnDecl: FN ID . LPAR ParamDecl RPAR
   70       | FN ID . LPAR ParamDecl RPAR ARR Type

    LPAR  shift, and go to state 27


state 17

   67 StructDef: STRUCT ID . LCUR VarDeclList RCUR

    LCUR  shift, and go to state 28


state 18

    0 $accept: Program $end .

    $default  accept


state 19

    2 ProgramElementList: ProgramElement ProgramElementList .

    $default  reduce using rule 2 (ProgramElementList)


state 20

   68 FnDeclStmt: FnDecl SEMICOLON .

    $default  reduce using rule 68 (FnDeclStmt)


state 21

   71 FnDef: FnDecl LCUR . CodeBlockStmtList RCUR

    SEMICOLON  shift, and go to state 29
    ID         shift, and go to state 30
    LET        shift, and go to state 2
    IF         shift, and go to state 31
    WHILE      shift, and go to state 32
    BREAK      shift, and go to state 33
    CONTINUE   shift, and go to state 34
    RETURN     shift, and go to state 35

    $default  reduce using rule 74 (CodeBlockStmtList)

    LeftVal            go to state 36
    FnCall             go to state 37
    VarDeclStmt        go to state 38
    CodeBlockStmtList  go to state 39
    CodeBlockStmt      go to state 40
    WhileStmt          go to state 41
    IfStmt             go to state 42
    AssignStmt         go to state 43


state 22

   53 VarDecl: ID COLON . Type
   57 VarDef: ID COLON . Type ASSIGN RightVal

    ID   shift, and go to state 44
    INT  shift, and go to state 45

    Type  go to state 46


state 23

   54 VarDecl: ID LBRA . NUM RBRA COLON Type
   56        | ID LBRA . NUM RBRA
   59 VarDef: ID LBRA . NUM RBRA COLON Type ASSIGN LCUR RightValList RCUR
   60       | ID LBRA . NUM RBRA ASSIGN LCUR RightValList RCUR

    SUB   shift, and go to state 47
    UNUM  shift, and go to state 48

    NUM  go to state 49


state 24

   58 VarDef: ID ASSIGN . RightVal

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM        go to state 52
    ArithExpr  go to state 53
    ExprUnit   go to state 54
    LeftVal    go to state 55
    RightVal   go to state 56
    FnCall     go to state 57


state 25

   51 VarDeclStmt: LET VarDecl SEMICOLON .

    $default  reduce using rule 51 (VarDeclStmt)


state 26

   52 VarDeclStmt: LET VarDef SEMICOLON .

    $default  reduce using rule 52 (VarDeclStmt)


state 27

   69 FnDecl: FN ID LPAR . ParamDecl RPAR
   70       | FN ID LPAR . ParamDecl RPAR ARR Type

    ID  shift, and go to state 58

    $default  reduce using rule 66 (ParamDecl)

    VarDecl      go to state 59
    VarDeclList  go to state 60
    ParamDecl    go to state 61


state 28

   67 StructDef: STRUCT ID LCUR . VarDeclList RCUR

    ID  shift, and go to state 58

    VarDecl      go to state 59
    VarDeclList  go to state 62


state 29

   84 CodeBlockStmt: SEMICOLON .

    $default  reduce using rule 84 (CodeBlockStmt)


state 30

   42 LeftVal: ID .
   49 FnCall: ID . LPAR RightValList RPAR
   50       | ID . LPAR RPAR

    LPAR  shift, and go to state 63

    $default  reduce using rule 42 (LeftVal)


state 31

   86 IfStmt: IF . BoolUnit_ LCUR CodeBlockStmtList RCUR
   87       | IF . BoolUnit_ LCUR CodeBlockStmtList RCUR ELSE LCUR CodeBlockStmtList RCUR

    LPAR  shift, and go to state 64

    BoolUnit_  go to state 65


state 32

   85 WhileStmt: WHILE . BoolUnit_ LCUR CodeBlockStmtList RCUR

    LPAR  shift, and go to state 64

    BoolUnit_  go to state 66


state 33

   83 CodeBlockStmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 67


state 34

   82 CodeBlockStmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 68


state 35

   80 CodeBlockStmt: RETURN . RightVal SEMICOLON
   81              | RETURN . SEMICOLON

    SUB        shift, and go to state 47
    SEMICOLON  shift, and go to state 69
    ID         shift, and go to state 50
    UNUM       shift, and go to state 48
    LPAR       shift, and go to state 51

    NUM        go to state 52
    ArithExpr  go to state 53
    ExprUnit   go to state 54
    LeftVal    go to state 55
    RightVal   go to state 70
    FnCall     go to state 57


state 36

   43 LeftVal: LeftVal . LBRA ID RBRA
   44        | LeftVal . LBRA NUM RBRA
   45        | LeftVal . DOT ID
   88 AssignStmt: LeftVal . ASSIGN RightVal SEMICOLON

    LBRA    shift, and go to state 71
    DOT     shift, and go to state 72
    ASSIGN  shift, and go to state 73


state 37

   77 CodeBlockStmt: FnCall . SEMICOLON

    SEMICOLON  shift, and go to state 74


state 38

   75 CodeBlockStmt: VarDeclStmt .

    $default  reduce using rule 75 (CodeBlockStmt)


state 39

   71 FnDef: FnDecl LCUR CodeBlockStmtList . RCUR

    RCUR  shift, and go to state 75


state 40

   72 CodeBlockStmtList: CodeBlockStmt . CodeBlockStmtList
   73                  | CodeBlockStmt .

    SEMICOLON  shift, and go to state 29
    ID         shift, and go to state 30
    LET        shift, and go to state 2
    IF         shift, and go to state 31
    WHILE      shift, and go to state 32
    BREAK      shift, and go to state 33
    CONTINUE   shift, and go to state 34
    RETURN     shift, and go to state 35

    RCUR      reduce using rule 73 (CodeBlockStmtList)
    RCUR      [reduce using rule 74 (CodeBlockStmtList)]
    $default  reduce using rule 73 (CodeBlockStmtList)

    LeftVal            go to state 36
    FnCall             go to state 37
    VarDeclStmt        go to state 38
    CodeBlockStmtList  go to state 76
    CodeBlockStmt      go to state 40
    WhileStmt          go to state 41
    IfStmt             go to state 42
    AssignStmt         go to state 43


state 41

   79 CodeBlockStmt: WhileStmt .

    $default  reduce using rule 79 (CodeBlockStmt)


state 42

   78 CodeBlockStmt: IfStmt .

    $default  reduce using rule 78 (CodeBlockStmt)


state 43

   76 CodeBlockStmt: AssignStmt .

    $default  reduce using rule 76 (CodeBlockStmt)


state 44

   62 Type: ID .

    $default  reduce using rule 62 (Type)


state 45

   61 Type: INT .

    $default  reduce using rule 61 (Type)


state 46

   53 VarDecl: ID COLON Type .
   57 VarDef: ID COLON Type . ASSIGN RightVal

    ASSIGN  shift, and go to state 77

    $default  reduce using rule 53 (VarDecl)


state 47

   10 NUM: SUB . UNUM

    UNUM  shift, and go to state 78


state 48

    9 NUM: UNUM .

    $default  reduce using rule 9 (NUM)


state 49

   54 VarDecl: ID LBRA NUM . RBRA COLON Type
   56        | ID LBRA NUM . RBRA
   59 VarDef: ID LBRA NUM . RBRA COLON Type ASSIGN LCUR RightValList RCUR
   60       | ID LBRA NUM . RBRA ASSIGN LCUR RightValList RCUR

    RBRA  shift, and go to state 79


state 50

   17 ExprUnit: ID .
   42 LeftVal: ID .
   49 FnCall: ID . LPAR RightValList RPAR
   50       | ID . LPAR RPAR

    LPAR  shift, and go to state 63

    LBRA      reduce using rule 42 (LeftVal)
    DOT       reduce using rule 42 (LeftVal)
    $default  reduce using rule 17 (ExprUnit)


state 51

   18 ExprUnit: LPAR . ArithExpr RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM        go to state 52
    ArithExpr  go to state 80
    ExprUnit   go to state 54
    LeftVal    go to state 55
    FnCall     go to state 57


state 52

   16 ExprUnit: NUM .

    $default  reduce using rule 16 (ExprUnit)


state 53

   11 ArithExpr: ArithExpr . ADD ArithExpr
   12          | ArithExpr . SUB ArithExpr
   13          | ArithExpr . MUL ArithExpr
   14          | ArithExpr . DIV ArithExpr
   46 RightVal: ArithExpr .

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82
    MUL  shift, and go to state 83
    DIV  shift, and go to state 84

    $default  reduce using rule 46 (RightVal)


state 54

   15 ArithExpr: ExprUnit .

    $default  reduce using rule 15 (ArithExpr)


state 55

   20 ExprUnit: LeftVal . LBRA ID RBRA
   21         | LeftVal . LBRA NUM RBRA
   22         | LeftVal . DOT ID
   43 LeftVal: LeftVal . LBRA ID RBRA
   44        | LeftVal . LBRA NUM RBRA
   45        | LeftVal . DOT ID

    LBRA  shift, and go to state 85
    DOT   shift, and go to state 86


state 56

   58 VarDef: ID ASSIGN RightVal .

    $default  reduce using rule 58 (VarDef)


state 57

   19 ExprUnit: FnCall .

    $default  reduce using rule 19 (ExprUnit)


state 58

   53 VarDecl: ID . COLON Type
   54        | ID . LBRA NUM RBRA COLON Type
   55        | ID .
   56        | ID . LBRA NUM RBRA

    COLON  shift, and go to state 87
    LBRA   shift, and go to state 88

    $default  reduce using rule 55 (VarDecl)


state 59

   63 VarDeclList: VarDecl . COMMA VarDeclList
   64            | VarDecl .

    COMMA  shift, and go to state 89

    $default  reduce using rule 64 (VarDeclList)


state 60

   65 ParamDecl: VarDeclList .

    $default  reduce using rule 65 (ParamDecl)


state 61

   69 FnDecl: FN ID LPAR ParamDecl . RPAR
   70       | FN ID LPAR ParamDecl . RPAR ARR Type

    RPAR  shift, and go to state 90


state 62

   67 StructDef: STRUCT ID LCUR VarDeclList . RCUR

    RCUR  shift, and go to state 91


state 63

   49 FnCall: ID LPAR . RightValList RPAR
   50       | ID LPAR . RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51
    RPAR  shift, and go to state 92

    NUM           go to state 52
    ArithExpr     go to state 53
    ExprUnit      go to state 54
    LeftVal       go to state 55
    RightVal      go to state 93
    RightValList  go to state 94
    FnCall        go to state 57


state 64

   34 BoolUnit_: LPAR . ExprUnit GT ExprUnit RPAR
   35          | LPAR . ExprUnit LT ExprUnit RPAR
   36          | LPAR . ExprUnit GE ExprUnit RPAR
   37          | LPAR . ExprUnit LE ExprUnit RPAR
   38          | LPAR . ExprUnit EQUAL ExprUnit RPAR
   39          | LPAR . ExprUnit NE ExprUnit RPAR
   40          | LPAR . BoolExpr RPAR
   41          | LPAR . NOT BoolUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 95
    NOT   shift, and go to state 96

    NUM       go to state 52
    ExprUnit  go to state 97
    BoolExpr  go to state 98
    BoolUnit  go to state 99
    LeftVal   go to state 55
    FnCall    go to state 57


state 65

   86 IfStmt: IF BoolUnit_ . LCUR CodeBlockStmtList RCUR
   87       | IF BoolUnit_ . LCUR CodeBlockStmtList RCUR ELSE LCUR CodeBlockStmtList RCUR

    LCUR  shift, and go to state 100


state 66

   85 WhileStmt: WHILE BoolUnit_ . LCUR CodeBlockStmtList RCUR

    LCUR  shift, and go to state 101


state 67

   83 CodeBlockStmt: BREAK SEMICOLON .

    $default  reduce using rule 83 (CodeBlockStmt)


state 68

   82 CodeBlockStmt: CONTINUE SEMICOLON .

    $default  reduce using rule 82 (CodeBlockStmt)


state 69

   81 CodeBlockStmt: RETURN SEMICOLON .

    $default  reduce using rule 81 (CodeBlockStmt)


state 70

   80 CodeBlockStmt: RETURN RightVal . SEMICOLON

    SEMICOLON  shift, and go to state 102


state 71

   43 LeftVal: LeftVal LBRA . ID RBRA
   44        | LeftVal LBRA . NUM RBRA

    SUB   shift, and go to state 47
    ID    shift, and go to state 103
    UNUM  shift, and go to state 48

    NUM  go to state 104


state 72

   45 LeftVal: LeftVal DOT . ID

    ID  shift, and go to state 105


state 73

   88 AssignStmt: LeftVal ASSIGN . RightVal SEMICOLON

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM        go to state 52
    ArithExpr  go to state 53
    ExprUnit   go to state 54
    LeftVal    go to state 55
    RightVal   go to state 106
    FnCall     go to state 57


state 74

   77 CodeBlockStmt: FnCall SEMICOLON .

    $default  reduce using rule 77 (CodeBlockStmt)


state 75

   71 FnDef: FnDecl LCUR CodeBlockStmtList RCUR .

    $default  reduce using rule 71 (FnDef)


state 76

   72 CodeBlockStmtList: CodeBlockStmt CodeBlockStmtList .

    $default  reduce using rule 72 (CodeBlockStmtList)


state 77

   57 VarDef: ID COLON Type ASSIGN . RightVal

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM        go to state 52
    ArithExpr  go to state 53
    ExprUnit   go to state 54
    LeftVal    go to state 55
    RightVal   go to state 107
    FnCall     go to state 57


state 78

   10 NUM: SUB UNUM .

    $default  reduce using rule 10 (NUM)


state 79

   54 VarDecl: ID LBRA NUM RBRA . COLON Type
   56        | ID LBRA NUM RBRA .
   59 VarDef: ID LBRA NUM RBRA . COLON Type ASSIGN LCUR RightValList RCUR
   60       | ID LBRA NUM RBRA . ASSIGN LCUR RightValList RCUR

    COLON   shift, and go to state 108
    ASSIGN  shift, and go to state 109

    $default  reduce using rule 56 (VarDecl)


state 80

   11 ArithExpr: ArithExpr . ADD ArithExpr
   12          | ArithExpr . SUB ArithExpr
   13          | ArithExpr . MUL ArithExpr
   14          | ArithExpr . DIV ArithExpr
   18 ExprUnit: LPAR ArithExpr . RPAR

    ADD   shift, and go to state 81
    SUB   shift, and go to state 82
    MUL   shift, and go to state 83
    DIV   shift, and go to state 84
    RPAR  shift, and go to state 110


state 81

   11 ArithExpr: ArithExpr ADD . ArithExpr

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM        go to state 52
    ArithExpr  go to state 111
    ExprUnit   go to state 54
    LeftVal    go to state 55
    FnCall     go to state 57


state 82

   12 ArithExpr: ArithExpr SUB . ArithExpr

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM        go to state 52
    ArithExpr  go to state 112
    ExprUnit   go to state 54
    LeftVal    go to state 55
    FnCall     go to state 57


state 83

   13 ArithExpr: ArithExpr MUL . ArithExpr

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM        go to state 52
    ArithExpr  go to state 113
    ExprUnit   go to state 54
    LeftVal    go to state 55
    FnCall     go to state 57


state 84

   14 ArithExpr: ArithExpr DIV . ArithExpr

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM        go to state 52
    ArithExpr  go to state 114
    ExprUnit   go to state 54
    LeftVal    go to state 55
    FnCall     go to state 57


state 85

   20 ExprUnit: LeftVal LBRA . ID RBRA
   21         | LeftVal LBRA . NUM RBRA
   43 LeftVal: LeftVal LBRA . ID RBRA
   44        | LeftVal LBRA . NUM RBRA

    SUB   shift, and go to state 47
    ID    shift, and go to state 115
    UNUM  shift, and go to state 48

    NUM  go to state 116


state 86

   22 ExprUnit: LeftVal DOT . ID
   45 LeftVal: LeftVal DOT . ID

    ID  shift, and go to state 117


state 87

   53 VarDecl: ID COLON . Type

    ID   shift, and go to state 44
    INT  shift, and go to state 45

    Type  go to state 118


state 88

   54 VarDecl: ID LBRA . NUM RBRA COLON Type
   56        | ID LBRA . NUM RBRA

    SUB   shift, and go to state 47
    UNUM  shift, and go to state 48

    NUM  go to state 119


state 89

   63 VarDeclList: VarDecl COMMA . VarDeclList

    ID  shift, and go to state 58

    VarDecl      go to state 59
    VarDeclList  go to state 120


state 90

   69 FnDecl: FN ID LPAR ParamDecl RPAR .
   70       | FN ID LPAR ParamDecl RPAR . ARR Type

    ARR  shift, and go to state 121

    $default  reduce using rule 69 (FnDecl)


state 91

   67 StructDef: STRUCT ID LCUR VarDeclList RCUR .

    $default  reduce using rule 67 (StructDef)


state 92

   50 FnCall: ID LPAR RPAR .

    $default  reduce using rule 50 (FnCall)


state 93

   47 RightValList: RightVal . COMMA RightValList
   48             | RightVal .

    COMMA  shift, and go to state 122

    $default  reduce using rule 48 (RightValList)


state 94

   49 FnCall: ID LPAR RightValList . RPAR

    RPAR  shift, and go to state 123


state 95

   18 ExprUnit: LPAR . ArithExpr RPAR
   26 BoolUnit: LPAR . ExprUnit GT ExprUnit RPAR
   27         | LPAR . ExprUnit GE ExprUnit RPAR
   28         | LPAR . ExprUnit LT ExprUnit RPAR
   29         | LPAR . ExprUnit LE ExprUnit RPAR
   30         | LPAR . ExprUnit EQUAL ExprUnit RPAR
   31         | LPAR . ExprUnit NE ExprUnit RPAR
   32         | LPAR . BoolExpr RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 95
    NOT   shift, and go to state 124

    NUM        go to state 52
    ArithExpr  go to state 80
    ExprUnit   go to state 125
    BoolExpr   go to state 126
    BoolUnit   go to state 99
    LeftVal    go to state 55
    FnCall     go to state 57


state 96

   33 BoolUnit: NOT . BoolUnit
   41 BoolUnit_: LPAR NOT . BoolUnit RPAR

    LPAR  shift, and go to state 127
    NOT   shift, and go to state 124

    BoolUnit  go to state 128


state 97

   34 BoolUnit_: LPAR ExprUnit . GT ExprUnit RPAR
   35          | LPAR ExprUnit . LT ExprUnit RPAR
   36          | LPAR ExprUnit . GE ExprUnit RPAR
   37          | LPAR ExprUnit . LE ExprUnit RPAR
   38          | LPAR ExprUnit . EQUAL ExprUnit RPAR
   39          | LPAR ExprUnit . NE ExprUnit RPAR

    GE     shift, and go to state 129
    LE     shift, and go to state 130
    EQUAL  shift, and go to state 131
    NE     shift, and go to state 132
    GT     shift, and go to state 133
    LT     shift, and go to state 134


state 98

   23 BoolExpr: BoolExpr . AND BoolExpr
   24         | BoolExpr . OR BoolExpr
   40 BoolUnit_: LPAR BoolExpr . RPAR

    RPAR  shift, and go to state 135
    AND   shift, and go to state 136
    OR    shift, and go to state 137


state 99

   25 BoolExpr: BoolUnit .

    $default  reduce using rule 25 (BoolExpr)


state 100

   86 IfStmt: IF BoolUnit_ LCUR . CodeBlockStmtList RCUR
   87       | IF BoolUnit_ LCUR . CodeBlockStmtList RCUR ELSE LCUR CodeBlockStmtList RCUR

    SEMICOLON  shift, and go to state 29
    ID         shift, and go to state 30
    LET        shift, and go to state 2
    IF         shift, and go to state 31
    WHILE      shift, and go to state 32
    BREAK      shift, and go to state 33
    CONTINUE   shift, and go to state 34
    RETURN     shift, and go to state 35

    $default  reduce using rule 74 (CodeBlockStmtList)

    LeftVal            go to state 36
    FnCall             go to state 37
    VarDeclStmt        go to state 38
    CodeBlockStmtList  go to state 138
    CodeBlockStmt      go to state 40
    WhileStmt          go to state 41
    IfStmt             go to state 42
    AssignStmt         go to state 43


state 101

   85 WhileStmt: WHILE BoolUnit_ LCUR . CodeBlockStmtList RCUR

    SEMICOLON  shift, and go to state 29
    ID         shift, and go to state 30
    LET        shift, and go to state 2
    IF         shift, and go to state 31
    WHILE      shift, and go to state 32
    BREAK      shift, and go to state 33
    CONTINUE   shift, and go to state 34
    RETURN     shift, and go to state 35

    $default  reduce using rule 74 (CodeBlockStmtList)

    LeftVal            go to state 36
    FnCall             go to state 37
    VarDeclStmt        go to state 38
    CodeBlockStmtList  go to state 139
    CodeBlockStmt      go to state 40
    WhileStmt          go to state 41
    IfStmt             go to state 42
    AssignStmt         go to state 43


state 102

   80 CodeBlockStmt: RETURN RightVal SEMICOLON .

    $default  reduce using rule 80 (CodeBlockStmt)


state 103

   43 LeftVal: LeftVal LBRA ID . RBRA

    RBRA  shift, and go to state 140


state 104

   44 LeftVal: LeftVal LBRA NUM . RBRA

    RBRA  shift, and go to state 141


state 105

   45 LeftVal: LeftVal DOT ID .

    $default  reduce using rule 45 (LeftVal)


state 106

   88 AssignStmt: LeftVal ASSIGN RightVal . SEMICOLON

    SEMICOLON  shift, and go to state 142


state 107

   57 VarDef: ID COLON Type ASSIGN RightVal .

    $default  reduce using rule 57 (VarDef)


state 108

   54 VarDecl: ID LBRA NUM RBRA COLON . Type
   59 VarDef: ID LBRA NUM RBRA COLON . Type ASSIGN LCUR RightValList RCUR

    ID   shift, and go to state 44
    INT  shift, and go to state 45

    Type  go to state 143


state 109

   60 VarDef: ID LBRA NUM RBRA ASSIGN . LCUR RightValList RCUR

    LCUR  shift, and go to state 144


state 110

   18 ExprUnit: LPAR ArithExpr RPAR .

    $default  reduce using rule 18 (ExprUnit)


state 111

   11 ArithExpr: ArithExpr . ADD ArithExpr
   11          | ArithExpr ADD ArithExpr .
   12          | ArithExpr . SUB ArithExpr
   13          | ArithExpr . MUL ArithExpr
   14          | ArithExpr . DIV ArithExpr

    MUL  shift, and go to state 83
    DIV  shift, and go to state 84

    $default  reduce using rule 11 (ArithExpr)


state 112

   11 ArithExpr: ArithExpr . ADD ArithExpr
   12          | ArithExpr . SUB ArithExpr
   12          | ArithExpr SUB ArithExpr .
   13          | ArithExpr . MUL ArithExpr
   14          | ArithExpr . DIV ArithExpr

    MUL  shift, and go to state 83
    DIV  shift, and go to state 84

    $default  reduce using rule 12 (ArithExpr)


state 113

   11 ArithExpr: ArithExpr . ADD ArithExpr
   12          | ArithExpr . SUB ArithExpr
   13          | ArithExpr . MUL ArithExpr
   13          | ArithExpr MUL ArithExpr .
   14          | ArithExpr . DIV ArithExpr

    $default  reduce using rule 13 (ArithExpr)


state 114

   11 ArithExpr: ArithExpr . ADD ArithExpr
   12          | ArithExpr . SUB ArithExpr
   13          | ArithExpr . MUL ArithExpr
   14          | ArithExpr . DIV ArithExpr
   14          | ArithExpr DIV ArithExpr .

    $default  reduce using rule 14 (ArithExpr)


state 115

   20 ExprUnit: LeftVal LBRA ID . RBRA
   43 LeftVal: LeftVal LBRA ID . RBRA

    RBRA  shift, and go to state 145


state 116

   21 ExprUnit: LeftVal LBRA NUM . RBRA
   44 LeftVal: LeftVal LBRA NUM . RBRA

    RBRA  shift, and go to state 146


state 117

   22 ExprUnit: LeftVal DOT ID .
   45 LeftVal: LeftVal DOT ID .

    LBRA      reduce using rule 45 (LeftVal)
    DOT       reduce using rule 45 (LeftVal)
    $default  reduce using rule 22 (ExprUnit)


state 118

   53 VarDecl: ID COLON Type .

    $default  reduce using rule 53 (VarDecl)


state 119

   54 VarDecl: ID LBRA NUM . RBRA COLON Type
   56        | ID LBRA NUM . RBRA

    RBRA  shift, and go to state 147


state 120

   63 VarDeclList: VarDecl COMMA VarDeclList .

    $default  reduce using rule 63 (VarDeclList)


state 121

   70 FnDecl: FN ID LPAR ParamDecl RPAR ARR . Type

    ID   shift, and go to state 44
    INT  shift, and go to state 45

    Type  go to state 148


state 122

   47 RightValList: RightVal COMMA . RightValList

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM           go to state 52
    ArithExpr     go to state 53
    ExprUnit      go to state 54
    LeftVal       go to state 55
    RightVal      go to state 93
    RightValList  go to state 149
    FnCall        go to state 57


state 123

   49 FnCall: ID LPAR RightValList RPAR .

    $default  reduce using rule 49 (FnCall)


state 124

   33 BoolUnit: NOT . BoolUnit

    LPAR  shift, and go to state 127
    NOT   shift, and go to state 124

    BoolUnit  go to state 150


state 125

   15 ArithExpr: ExprUnit .
   26 BoolUnit: LPAR ExprUnit . GT ExprUnit RPAR
   27         | LPAR ExprUnit . GE ExprUnit RPAR
   28         | LPAR ExprUnit . LT ExprUnit RPAR
   29         | LPAR ExprUnit . LE ExprUnit RPAR
   30         | LPAR ExprUnit . EQUAL ExprUnit RPAR
   31         | LPAR ExprUnit . NE ExprUnit RPAR

    GE     shift, and go to state 151
    LE     shift, and go to state 152
    EQUAL  shift, and go to state 153
    NE     shift, and go to state 154
    GT     shift, and go to state 155
    LT     shift, and go to state 156

    $default  reduce using rule 15 (ArithExpr)


state 126

   23 BoolExpr: BoolExpr . AND BoolExpr
   24         | BoolExpr . OR BoolExpr
   32 BoolUnit: LPAR BoolExpr . RPAR

    RPAR  shift, and go to state 157
    AND   shift, and go to state 136
    OR    shift, and go to state 137


state 127

   26 BoolUnit: LPAR . ExprUnit GT ExprUnit RPAR
   27         | LPAR . ExprUnit GE ExprUnit RPAR
   28         | LPAR . ExprUnit LT ExprUnit RPAR
   29         | LPAR . ExprUnit LE ExprUnit RPAR
   30         | LPAR . ExprUnit EQUAL ExprUnit RPAR
   31         | LPAR . ExprUnit NE ExprUnit RPAR
   32         | LPAR . BoolExpr RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 95
    NOT   shift, and go to state 124

    NUM       go to state 52
    ExprUnit  go to state 158
    BoolExpr  go to state 126
    BoolUnit  go to state 99
    LeftVal   go to state 55
    FnCall    go to state 57


state 128

   33 BoolUnit: NOT BoolUnit .
   41 BoolUnit_: LPAR NOT BoolUnit . RPAR

    RPAR  shift, and go to state 159

    $default  reduce using rule 33 (BoolUnit)


state 129

   36 BoolUnit_: LPAR ExprUnit GE . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 160
    LeftVal   go to state 55
    FnCall    go to state 57


state 130

   37 BoolUnit_: LPAR ExprUnit LE . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 161
    LeftVal   go to state 55
    FnCall    go to state 57


state 131

   38 BoolUnit_: LPAR ExprUnit EQUAL . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 162
    LeftVal   go to state 55
    FnCall    go to state 57


state 132

   39 BoolUnit_: LPAR ExprUnit NE . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 163
    LeftVal   go to state 55
    FnCall    go to state 57


state 133

   34 BoolUnit_: LPAR ExprUnit GT . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 164
    LeftVal   go to state 55
    FnCall    go to state 57


state 134

   35 BoolUnit_: LPAR ExprUnit LT . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 165
    LeftVal   go to state 55
    FnCall    go to state 57


state 135

   40 BoolUnit_: LPAR BoolExpr RPAR .

    $default  reduce using rule 40 (BoolUnit_)


state 136

   23 BoolExpr: BoolExpr AND . BoolExpr

    LPAR  shift, and go to state 127
    NOT   shift, and go to state 124

    BoolExpr  go to state 166
    BoolUnit  go to state 99


state 137

   24 BoolExpr: BoolExpr OR . BoolExpr

    LPAR  shift, and go to state 127
    NOT   shift, and go to state 124

    BoolExpr  go to state 167
    BoolUnit  go to state 99


state 138

   86 IfStmt: IF BoolUnit_ LCUR CodeBlockStmtList . RCUR
   87       | IF BoolUnit_ LCUR CodeBlockStmtList . RCUR ELSE LCUR CodeBlockStmtList RCUR

    RCUR  shift, and go to state 168


state 139

   85 WhileStmt: WHILE BoolUnit_ LCUR CodeBlockStmtList . RCUR

    RCUR  shift, and go to state 169


state 140

   43 LeftVal: LeftVal LBRA ID RBRA .

    $default  reduce using rule 43 (LeftVal)


state 141

   44 LeftVal: LeftVal LBRA NUM RBRA .

    $default  reduce using rule 44 (LeftVal)


state 142

   88 AssignStmt: LeftVal ASSIGN RightVal SEMICOLON .

    $default  reduce using rule 88 (AssignStmt)


state 143

   54 VarDecl: ID LBRA NUM RBRA COLON Type .
   59 VarDef: ID LBRA NUM RBRA COLON Type . ASSIGN LCUR RightValList RCUR

    ASSIGN  shift, and go to state 170

    $default  reduce using rule 54 (VarDecl)


state 144

   60 VarDef: ID LBRA NUM RBRA ASSIGN LCUR . RightValList RCUR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM           go to state 52
    ArithExpr     go to state 53
    ExprUnit      go to state 54
    LeftVal       go to state 55
    RightVal      go to state 93
    RightValList  go to state 171
    FnCall        go to state 57


state 145

   20 ExprUnit: LeftVal LBRA ID RBRA .
   43 LeftVal: LeftVal LBRA ID RBRA .

    LBRA      reduce using rule 43 (LeftVal)
    DOT       reduce using rule 43 (LeftVal)
    $default  reduce using rule 20 (ExprUnit)


state 146

   21 ExprUnit: LeftVal LBRA NUM RBRA .
   44 LeftVal: LeftVal LBRA NUM RBRA .

    LBRA      reduce using rule 44 (LeftVal)
    DOT       reduce using rule 44 (LeftVal)
    $default  reduce using rule 21 (ExprUnit)


state 147

   54 VarDecl: ID LBRA NUM RBRA . COLON Type
   56        | ID LBRA NUM RBRA .

    COLON  shift, and go to state 172

    $default  reduce using rule 56 (VarDecl)


state 148

   70 FnDecl: FN ID LPAR ParamDecl RPAR ARR Type .

    $default  reduce using rule 70 (FnDecl)


state 149

   47 RightValList: RightVal COMMA RightValList .

    $default  reduce using rule 47 (RightValList)


state 150

   33 BoolUnit: NOT BoolUnit .

    $default  reduce using rule 33 (BoolUnit)


state 151

   27 BoolUnit: LPAR ExprUnit GE . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 173
    LeftVal   go to state 55
    FnCall    go to state 57


state 152

   29 BoolUnit: LPAR ExprUnit LE . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 174
    LeftVal   go to state 55
    FnCall    go to state 57


state 153

   30 BoolUnit: LPAR ExprUnit EQUAL . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 175
    LeftVal   go to state 55
    FnCall    go to state 57


state 154

   31 BoolUnit: LPAR ExprUnit NE . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 176
    LeftVal   go to state 55
    FnCall    go to state 57


state 155

   26 BoolUnit: LPAR ExprUnit GT . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 177
    LeftVal   go to state 55
    FnCall    go to state 57


state 156

   28 BoolUnit: LPAR ExprUnit LT . ExprUnit RPAR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM       go to state 52
    ExprUnit  go to state 178
    LeftVal   go to state 55
    FnCall    go to state 57


state 157

   32 BoolUnit: LPAR BoolExpr RPAR .

    $default  reduce using rule 32 (BoolUnit)


state 158

   26 BoolUnit: LPAR ExprUnit . GT ExprUnit RPAR
   27         | LPAR ExprUnit . GE ExprUnit RPAR
   28         | LPAR ExprUnit . LT ExprUnit RPAR
   29         | LPAR ExprUnit . LE ExprUnit RPAR
   30         | LPAR ExprUnit . EQUAL ExprUnit RPAR
   31         | LPAR ExprUnit . NE ExprUnit RPAR

    GE     shift, and go to state 151
    LE     shift, and go to state 152
    EQUAL  shift, and go to state 153
    NE     shift, and go to state 154
    GT     shift, and go to state 155
    LT     shift, and go to state 156


state 159

   41 BoolUnit_: LPAR NOT BoolUnit RPAR .

    $default  reduce using rule 41 (BoolUnit_)


state 160

   36 BoolUnit_: LPAR ExprUnit GE ExprUnit . RPAR

    RPAR  shift, and go to state 179


state 161

   37 BoolUnit_: LPAR ExprUnit LE ExprUnit . RPAR

    RPAR  shift, and go to state 180


state 162

   38 BoolUnit_: LPAR ExprUnit EQUAL ExprUnit . RPAR

    RPAR  shift, and go to state 181


state 163

   39 BoolUnit_: LPAR ExprUnit NE ExprUnit . RPAR

    RPAR  shift, and go to state 182


state 164

   34 BoolUnit_: LPAR ExprUnit GT ExprUnit . RPAR

    RPAR  shift, and go to state 183


state 165

   35 BoolUnit_: LPAR ExprUnit LT ExprUnit . RPAR

    RPAR  shift, and go to state 184


state 166

   23 BoolExpr: BoolExpr . AND BoolExpr
   23         | BoolExpr AND BoolExpr .
   24         | BoolExpr . OR BoolExpr

    $default  reduce using rule 23 (BoolExpr)


state 167

   23 BoolExpr: BoolExpr . AND BoolExpr
   24         | BoolExpr . OR BoolExpr
   24         | BoolExpr OR BoolExpr .

    AND  shift, and go to state 136

    $default  reduce using rule 24 (BoolExpr)


state 168

   86 IfStmt: IF BoolUnit_ LCUR CodeBlockStmtList RCUR .
   87       | IF BoolUnit_ LCUR CodeBlockStmtList RCUR . ELSE LCUR CodeBlockStmtList RCUR

    ELSE  shift, and go to state 185

    $default  reduce using rule 86 (IfStmt)


state 169

   85 WhileStmt: WHILE BoolUnit_ LCUR CodeBlockStmtList RCUR .

    $default  reduce using rule 85 (WhileStmt)


state 170

   59 VarDef: ID LBRA NUM RBRA COLON Type ASSIGN . LCUR RightValList RCUR

    LCUR  shift, and go to state 186


state 171

   60 VarDef: ID LBRA NUM RBRA ASSIGN LCUR RightValList . RCUR

    RCUR  shift, and go to state 187


state 172

   54 VarDecl: ID LBRA NUM RBRA COLON . Type

    ID   shift, and go to state 44
    INT  shift, and go to state 45

    Type  go to state 188


state 173

   27 BoolUnit: LPAR ExprUnit GE ExprUnit . RPAR

    RPAR  shift, and go to state 189


state 174

   29 BoolUnit: LPAR ExprUnit LE ExprUnit . RPAR

    RPAR  shift, and go to state 190


state 175

   30 BoolUnit: LPAR ExprUnit EQUAL ExprUnit . RPAR

    RPAR  shift, and go to state 191


state 176

   31 BoolUnit: LPAR ExprUnit NE ExprUnit . RPAR

    RPAR  shift, and go to state 192


state 177

   26 BoolUnit: LPAR ExprUnit GT ExprUnit . RPAR

    RPAR  shift, and go to state 193


state 178

   28 BoolUnit: LPAR ExprUnit LT ExprUnit . RPAR

    RPAR  shift, and go to state 194


state 179

   36 BoolUnit_: LPAR ExprUnit GE ExprUnit RPAR .

    $default  reduce using rule 36 (BoolUnit_)


state 180

   37 BoolUnit_: LPAR ExprUnit LE ExprUnit RPAR .

    $default  reduce using rule 37 (BoolUnit_)


state 181

   38 BoolUnit_: LPAR ExprUnit EQUAL ExprUnit RPAR .

    $default  reduce using rule 38 (BoolUnit_)


state 182

   39 BoolUnit_: LPAR ExprUnit NE ExprUnit RPAR .

    $default  reduce using rule 39 (BoolUnit_)


state 183

   34 BoolUnit_: LPAR ExprUnit GT ExprUnit RPAR .

    $default  reduce using rule 34 (BoolUnit_)


state 184

   35 BoolUnit_: LPAR ExprUnit LT ExprUnit RPAR .

    $default  reduce using rule 35 (BoolUnit_)


state 185

   87 IfStmt: IF BoolUnit_ LCUR CodeBlockStmtList RCUR ELSE . LCUR CodeBlockStmtList RCUR

    LCUR  shift, and go to state 195


state 186

   59 VarDef: ID LBRA NUM RBRA COLON Type ASSIGN LCUR . RightValList RCUR

    SUB   shift, and go to state 47
    ID    shift, and go to state 50
    UNUM  shift, and go to state 48
    LPAR  shift, and go to state 51

    NUM           go to state 52
    ArithExpr     go to state 53
    ExprUnit      go to state 54
    LeftVal       go to state 55
    RightVal      go to state 93
    RightValList  go to state 196
    FnCall        go to state 57


state 187

   60 VarDef: ID LBRA NUM RBRA ASSIGN LCUR RightValList RCUR .

    $default  reduce using rule 60 (VarDef)


state 188

   54 VarDecl: ID LBRA NUM RBRA COLON Type .

    $default  reduce using rule 54 (VarDecl)


state 189

   27 BoolUnit: LPAR ExprUnit GE ExprUnit RPAR .

    $default  reduce using rule 27 (BoolUnit)


state 190

   29 BoolUnit: LPAR ExprUnit LE ExprUnit RPAR .

    $default  reduce using rule 29 (BoolUnit)


state 191

   30 BoolUnit: LPAR ExprUnit EQUAL ExprUnit RPAR .

    $default  reduce using rule 30 (BoolUnit)


state 192

   31 BoolUnit: LPAR ExprUnit NE ExprUnit RPAR .

    $default  reduce using rule 31 (BoolUnit)


state 193

   26 BoolUnit: LPAR ExprUnit GT ExprUnit RPAR .

    $default  reduce using rule 26 (BoolUnit)


state 194

   28 BoolUnit: LPAR ExprUnit LT ExprUnit RPAR .

    $default  reduce using rule 28 (BoolUnit)


state 195

   87 IfStmt: IF BoolUnit_ LCUR CodeBlockStmtList RCUR ELSE LCUR . CodeBlockStmtList RCUR

    SEMICOLON  shift, and go to state 29
    ID         shift, and go to state 30
    LET        shift, and go to state 2
    IF         shift, and go to state 31
    WHILE      shift, and go to state 32
    BREAK      shift, and go to state 33
    CONTINUE   shift, and go to state 34
    RETURN     shift, and go to state 35

    $default  reduce using rule 74 (CodeBlockStmtList)

    LeftVal            go to state 36
    FnCall             go to state 37
    VarDeclStmt        go to state 38
    CodeBlockStmtList  go to state 197
    CodeBlockStmt      go to state 40
    WhileStmt          go to state 41
    IfStmt             go to state 42
    AssignStmt         go to state 43


state 196

   59 VarDef: ID LBRA NUM RBRA COLON Type ASSIGN LCUR RightValList . RCUR

    RCUR  shift, and go to state 198


state 197

   87 IfStmt: IF BoolUnit_ LCUR CodeBlockStmtList RCUR ELSE LCUR CodeBlockStmtList . RCUR

    RCUR  shift, and go to state 199


state 198

   59 VarDef: ID LBRA NUM RBRA COLON Type ASSIGN LCUR RightValList RCUR .

    $default  reduce using rule 59 (VarDef)


state 199

   87 IfStmt: IF BoolUnit_ LCUR CodeBlockStmtList RCUR ELSE LCUR CodeBlockStmtList RCUR .

    $default  reduce using rule 87 (IfStmt)
